{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nexport const Leaders = (state = {\n  isLoading: false,\n  err: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        err: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        err: null,\n        leaders: []\n      };\n\n    case ActionTypes.PROMOS_FAILED:\n      return { ...state,\n        isLoading: false,\n        err: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Progs/Github Repos/React-Projects/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","err","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","PROMOS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CACrBC,KAAK,GAAG;AACNC,EAAAA,SAAS,EAAE,KADL;AAENC,EAAAA,GAAG,EAAE,IAFC;AAGNC,EAAAA,OAAO,EAAE;AAHH,CADa,EAMrBC,MANqB,KAOlB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,WAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,GAAG,EAAE,IAHA;AAILC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAJX,OAAP;;AAOF,SAAKT,WAAW,CAACU,eAAjB;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,GAAG,EAAE,IAAlC;AAAwCC,QAAAA,OAAO,EAAE;AAAjD,OAAP;;AAEF,SAAKL,WAAW,CAACW,aAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,GAAG,EAAEE,MAAM,CAACG,OAHP;AAILJ,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF;AACE,aAAOH,KAAP;AArBJ;AAuBD,CA/BM","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: false,\r\n    err: null,\r\n    leaders: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        err: null,\r\n        leaders: action.payload,\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, err: null, leaders: [] };\r\n\r\n    case ActionTypes.PROMOS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        err: action.payload,\r\n        leaders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}