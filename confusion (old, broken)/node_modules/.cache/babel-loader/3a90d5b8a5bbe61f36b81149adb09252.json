{"ast":null,"code":"var _jsxFileName = \"D:\\\\Progs\\\\Github Repos\\\\React-Projects\\\\confusion\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from \"react\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport Menu from \"./MenuComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport Contact from \"./ContactComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from \"../redux/ActionCreators\";\nimport { actions } from \"react-redux-form\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    leaders: state.leaders,\n    comments: state.comments,\n    promotions: state.promotions\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  fetchComments: () => {\n    dispatch(fetchComments());\n  },\n  fetchPromos: () => {\n    dispatch(fetchPromos());\n  },\n  fetchLeaders: () => {\n    dispatch(fetchLeaders());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  }\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchComments();\n    this.props.fetchDishes();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  onDishSelect(dishId) {\n    this.setState({\n      selectedDish: dishId\n    });\n  }\n\n  render() {\n    const HomePage = () => {\n      return /*#__PURE__*/React.createElement(Home, {\n        dish: this.props.dishes.dishes.filter(dish => dish.featured)[0],\n        dishesLoading: this.props.dishes.isLoading,\n        dishesErr: this.props.dishes.err,\n        promotion: this.props.promotions.promotions.filter(promo => promo.featured)[0],\n        promosLoading: this.props.promotions.isLoading,\n        promosErr: this.props.promotions.err,\n        leader: this.props.leaders.leaders.filter(leader => leader.featured)[0],\n        leadersLoading: this.props.leaders.isLoading,\n        leadersErr: this.props.leaders.err,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      });\n    };\n\n    const DishWithId = ({\n      match\n    }) => {\n      return /*#__PURE__*/React.createElement(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0],\n        isLoading: this.props.dishes.isLoading,\n        err: this.props.dishes.err,\n        comments: this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10)),\n        errComments: this.props.comments.err,\n        postComment: this.props.postComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      key: this.props.location.key,\n      classNames: \"page\",\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/aboutus\",\n      component: () => /*#__PURE__*/React.createElement(About, {\n        leaders: this.props.leaders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/menu\",\n      component: () => /*#__PURE__*/React.createElement(Menu, {\n        dishes: this.props.dishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/menu/:dishId\",\n      component: DishWithId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/contactus\",\n      component: () => /*#__PURE__*/React.createElement(Contact, {\n        resetFeedbackForm: this.props.resetFeedbackForm,\n        postFeedback: this.props.postFeedback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n/*\r\n        <Menu dishes={this.state.dishes}\r\n            onClick={(dishId) => this.onDishSelect(dishId)}/>\r\n        <DishDetail \r\n            dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]}\r\n            />\r\n\r\n*/","map":{"version":3,"sources":["D:/Progs/Github Repos/React-Projects/confusion/src/components/MainComponent.js"],"names":["React","Component","Home","About","Header","Footer","Menu","DishDetail","Contact","Switch","Route","Redirect","withRouter","connect","postComment","postFeedback","fetchDishes","fetchComments","fetchPromos","fetchLeaders","actions","TransitionGroup","CSSTransition","mapStateToProps","state","dishes","leaders","comments","promotions","mapDispatchToProps","dispatch","dishId","rating","author","comment","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","reset","Main","constructor","props","componentDidMount","onDishSelect","setState","selectedDish","render","HomePage","filter","dish","featured","isLoading","err","promo","leader","DishWithId","match","id","parseInt","params","location","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Home from \"./HomeComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  postComment,\r\n  postFeedback,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n} from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    leaders: state.leaders,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    ),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  fetchComments: () => {\r\n    dispatch(fetchComments());\r\n  },\r\n  fetchPromos: () => {\r\n    dispatch(fetchPromos());\r\n  },\r\n  fetchLeaders: () => {\r\n    dispatch(fetchLeaders());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchComments();\r\n    this.props.fetchDishes();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({\r\n      selectedDish: dishId,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErr={this.props.dishes.err}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErr={this.props.promotions.err}\r\n          leader={\r\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n          }\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErr={this.props.leaders.err}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          err={this.props.dishes.err}\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          errComments={this.props.comments.err}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route\r\n                exact\r\n                path=\"/aboutus\"\r\n                component={() => <About leaders={this.props.leaders} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact\r\n                    resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback}\r\n                  />\r\n                )}\r\n              />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n/*\r\n        <Menu dishes={this.state.dishes}\r\n            onClick={(dishId) => this.onDishSelect(dishId)}/>\r\n        <DishDetail \r\n            dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]}\r\n            />\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}