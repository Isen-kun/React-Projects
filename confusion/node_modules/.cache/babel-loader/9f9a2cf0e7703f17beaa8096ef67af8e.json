{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log(\"Post comments\", error.message);\n    alert(\"Your comment could not be posted\\n error: \" + error.message);\n  });\n};\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).catch(error => {\n    console.log(\"Post Feedback\", error.message);\n    alert(\"Your comment could not be posted\\n error: \" + error.message);\n  });\n};\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + \"dishes\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => {\n    dispatch(dishesFailed(error.message));\n  });\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = err => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: err\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseUrl + \"promotions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = err => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: err\n});\nexport const commentsFailed = err => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: err\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + \"leaders\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \":\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var err = new Error(error.message);\n    throw err;\n  }).then(response => response.json()).then(dishes => dispatch(addLeaders(dishes))).catch(error => {\n    dispatch(leadersFailed(error.message));\n  });\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = err => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: err\n});\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});","map":{"version":3,"sources":["D:/Progs/Github Repos/React-Projects/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","err","message","json","catch","console","log","alert","postFeedback","firstname","lastname","telnum","email","agree","contactType","newFeedback","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","commentsFailed","COMMENTS_FAILED","fetchComments","comments","addComments","ADD_COMMENTS","ADD_DISHES","ADD_PROMOS","fetchLeaders","leadersLoading","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","leaders","ADD_LEADERS"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch((error) => {\r\n      console.log(\"Post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\n error: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => (dispatch) => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n  };\r\n\r\n  newFeedback.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .catch((error) => {\r\n      console.log(\"Post Feedback\", error.message);\r\n      alert(\"Your comment could not be posted\\n error: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading(true));\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addDishes(dishes)))\r\n    .catch((error) => {\r\n      dispatch(dishesFailed(error.message));\r\n    });\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (err) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: err,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading(true));\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (err) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: err,\r\n});\r\n\r\nexport const commentsFailed = (err) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: err,\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((comments) => dispatch(addComments(comments)))\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var err = new Error(error.message);\r\n        throw err;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addLeaders(dishes)))\r\n    .catch((error) => {\r\n      dispatch(leadersFailed(error.message));\r\n    });\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (err) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: err,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}