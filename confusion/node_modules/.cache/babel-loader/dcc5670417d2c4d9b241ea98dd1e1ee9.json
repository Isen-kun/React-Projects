{"ast":null,"code":"import _objectSpread from\"D:\\\\Progs\\\\Github Repos\\\\React-Projects\\\\confusion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as ActionTypes from\"./ActionTypes\";export var Leaders=function Leaders(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:false,err:null,leaders:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_LEADERS:return _objectSpread({},state,{isLoading:false,err:null,leaders:action.payload});case ActionTypes.LEADERS_LOADING:return _objectSpread({},state,{isLoading:true,err:null,leaders:[]});case ActionTypes.PROMOS_FAILED:return _objectSpread({},state,{isLoading:false,err:action.payload,leaders:[]});default:return state;}};","map":{"version":3,"sources":["D:/Progs/Github Repos/React-Projects/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","err","leaders","action","type","ADD_LEADERS","payload","LEADERS_LOADING","PROMOS_FAILED"],"mappings":"uIAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAOlB,IANHC,CAAAA,KAMG,2DANK,CACNC,SAAS,CAAE,KADL,CAENC,GAAG,CAAE,IAFC,CAGNC,OAAO,CAAE,EAHH,CAML,IADHC,CAAAA,MACG,2CACH,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,WAAW,CAACQ,WAAjB,CACE,wBACKN,KADL,EAEEC,SAAS,CAAE,KAFb,CAGEC,GAAG,CAAE,IAHP,CAIEC,OAAO,CAAEC,MAAM,CAACG,OAJlB,GAOF,IAAKT,CAAAA,WAAW,CAACU,eAAjB,CACE,wBAAYR,KAAZ,EAAmBC,SAAS,CAAE,IAA9B,CAAoCC,GAAG,CAAE,IAAzC,CAA+CC,OAAO,CAAE,EAAxD,GAEF,IAAKL,CAAAA,WAAW,CAACW,aAAjB,CACE,wBACKT,KADL,EAEEC,SAAS,CAAE,KAFb,CAGEC,GAAG,CAAEE,MAAM,CAACG,OAHd,CAIEJ,OAAO,CAAE,EAJX,GAOF,QACE,MAAOH,CAAAA,KAAP,CArBJ,CAuBD,CA/BM","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: false,\r\n    err: null,\r\n    leaders: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        err: null,\r\n        leaders: action.payload,\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, err: null, leaders: [] };\r\n\r\n    case ActionTypes.PROMOS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        err: action.payload,\r\n        leaders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}