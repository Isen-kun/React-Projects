{"ast":null,"code":"import _objectSpread from\"D:\\\\Progs\\\\Github Repos\\\\React-Projects\\\\confusion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{createStore,combineReducers,applyMiddleware}from\"redux\";import{createForms}from\"react-redux-form\";import{Dishes}from\"./dishes\";import{Comments}from\"./comments\";import{Promotions}from\"./promotions\";import{Leaders}from\"./leaders\";import thunk from\"redux-thunk\";import logger from\"redux-logger\";import{InitialFeedback}from\"./forms\";export var ConfigureStore=function ConfigureStore(){var store=createStore(combineReducers(_objectSpread({dishes:Dishes,comments:Comments,promotions:Promotions,leaders:Leaders},createForms({feedback:InitialFeedback}))),applyMiddleware(thunk,logger));return store;};","map":{"version":3,"sources":["D:/Progs/Github Repos/React-Projects/confusion/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","createForms","Dishes","Comments","Promotions","Leaders","thunk","logger","InitialFeedback","ConfigureStore","store","dishes","comments","promotions","leaders","feedback"],"mappings":"uIAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,eAAT,KAAgC,SAAhC,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CACvBC,eAAe,gBACbY,MAAM,CAAET,MADK,CAEbU,QAAQ,CAAET,QAFG,CAGbU,UAAU,CAAET,UAHC,CAIbU,OAAO,CAAET,OAJI,EAKVJ,WAAW,CAAC,CACbc,QAAQ,CAAEP,eADG,CAAD,CALD,EADQ,CAUvBR,eAAe,CAACM,KAAD,CAAQC,MAAR,CAVQ,CAAzB,CAaA,MAAOG,CAAAA,KAAP,CACD,CAfM","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comments\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { InitialFeedback } from \"./forms\";\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      promotions: Promotions,\r\n      leaders: Leaders,\r\n      ...createForms({\r\n        feedback: InitialFeedback,\r\n      }),\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n\r\n  return store;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}